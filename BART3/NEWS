
Main differences between BART (stable) and BART3 (development)
        * new support for Thompson Sampling Variable Selection

	* new S3 methods for Friedman's partial dependence function (FPD)
        and Shapley values (SHAP)

	* better support for cold-/hot-decking missing imputation

	* better automated detection of OpenMP on Windows and macOS

        * better support for factors in data.frames 
        especially for DART where it is the most sorely needed

Changes and New Features in 4.8 (2023-09-19):
	* for FPD, new conditional dependence method with subset. arg

Changes and New Features in 4.7 (2023-07-10):
	* for FPD/FPDK/SHAP/SHAPK, the x.test argument is smarter
	now a matrix of settings corresponding to ONLY the S columns 
        of x.train in the order of S (and backwards compatible if 
        all P columns of x.train are present as initially required)
        also more realistic default of mult.impute=30 (FPDK/SHAPK only)

Changes and New Features in 4.6 (2023-05-05):
	* updates for FPD/FPDK methods and new docs

	* updates to docs and fixing examples

	* better automated detection of OpenMP on Windows and macOS

Changes and New Features in 4.5 (2023-03-27):
	* to avoid further confusion, renaming prefix HD "hot-deck"
	methods (introduced in v3.9) to suffix K for "kernel" sampling
	that is a more appropriate name.  "hot-deck" is reserved for
        the new function HDimpute that provides hot-deck missing 
        value imputation

	* new function tsvs for Thompson Sampling Variable Selection

	* C++11 is now the CRAN standard

	* Dirichlet sparse prior settings properly handle data.frame factors
	i.e., grouped variable dummies receive appropriate Dirichlet weights
	experimental feature for continuous and dichotomous outcomes
	along with time-to-event and competing risks
	Chipman H, George E, Hahn R, McCulloch R, Pratola M, Sparapani, R. 
	"Section 7.1.1: Grouped variables and the DART prior" In
	"Computational approaches to Bayesian Additive Regression Trees", 
	Chapter of Computational Statistics in Data Science,
	Piegorsch W, Levine R, Zhang HH, Lee TCM (eds.) Wiley, 2022.

Changes and New Features in 4.4 (2022-02-15):
	* Makevars now defaults to Windows which is unable to
	generate it from Makevars.win whereas Linux/macOS 
	have no problem creating it from Makevars.in 

	* default mc.cores to the value provided by options()

	* predict() now converts data.frames to matrix as necessary

	* cleaning up some warnings

	* removing experimental work: hbart, zbart

	* removing trees/treeinit: you can't avoid the burn-in
	penalty by hot-wiring BART with a previous fit

	* sigma is now thinned, when specified, in gbart/mc.gbart

Changes and New Features in 4.3 (2021-06-09):
	* Experimental: grouped categorical variables for DART

	* Removing randomForest package as a Depends in DESCRIPTION
	but the code remains: you just need to add it to DESCRIPTION
	and uncomment it in NAMESPACE to get that functionality
	
	* Renaming HDimpute function to CDimpute to better
	reflect its flavor of cold-decking vs. hot-decking

	* Adding hot-decking implementation: hotdeckdraw

Changes and New Features in 4.2 (2020-12-22):
	* Synchronizing docs with BART package:
	from here on, the docs may diverge as needed

	* fix bugs in mc.pwbart

Changes and New Features in 4.1 (2020-10-05):
	* Experimental function for sequential sharding: ss.gbart

Changes and New Features in 4.0 (2020-08-28):
	* New function for hot-deck missing imputation of
	x.train and x.test: HDimpute
	it samples missing values that are row-dependent
	rather than independent
	compatible with, and cognizant of, multinomial imputation

Changes and New Features in 3.9 (2020-07-30):
	* Hot decked version of FPD, S3 method HDPFD, completed 
	with its corresponding variance adjustment

Changes and New Features in 3.8 (2020-07-13):
	* New support for covariate missing imputation of a category
	  see the new arguments to gbart: impute.mult, impute.prob
	  and impute.miss

Changes and New Features in 3.7 (2020-06-10):
	* Experimental support for Modified LISA: ml.gbart() function
	* Experimental support for Heteroskedastic BART: hbart()
	* Experimental support for LIO BART: liobart()
	* Synching new S3 method arguments
	* Use weighted combination subsets for SHAP/SHAP2/HDSHAP S3 methods
          (originally HDSHAP was simply named HD)
	* Hot decked version of FPD: S3 method HDPFD

Changes and New Features in 3.6 (2020-05-09):
	* Adding new S3 method, SHAP, that calculates the
	Shapley additive explanation (SHAP) partial dependence function
	and SHAP2 for two-way interactions
	an alternative to Friedman's partial dependence function
	Shapley are computed from the x.test/predict fit directly 
	whereas Friedman requires that x.test/predict be employed 
	and intermediate results summarized over x.train
	which can be more work or less work: it depends
	since Shapley requires all possible variable subsets to 
	be differenced which explodes with the number of variables
	so there is an efficiency tradeoff between the two approaches
	currently, this is written in R code, but C/C++ would 
	certainly speed this up dramatically: some of the code
	necessary can be found in the C/C++ function cpwbart
	perhaps, there is a way to calculate the computational
	complexity, and given the situation, use either
	Shapley or Friedman, which ever is more efficient

Changes and New Features in 3.5 (2020-04-14):
	* fixing bugs in crisk3.bart, mc.crisk3.bart and gbart
	most of these revolve around rm.const and its misuse
	there is a possibility that these issues exist elsewhere

	* predict.crisk3bart/survbart now handle missing data with 
	multiple imputation hot decking: likely potential for 
	other functions to have similar capability

Changes and New Features in 3.4 (2020-01-27):
	* removing our early, naive version of gbmm from the NAMESPACE
	a more comprehensive version is available in our sub-directory
	https://github.com/rsparapa/bnptools/mxBART
	
Changes and New Features in 3.3 (2020-01-19):
	* still debugging crisk2.mbart

	* however, crisk3.bart (based on crisk.bart) for
	three causes is now working

Changes and New Features in 3.2 (2019-12-15):
	* adding crisk2.mbart to extend competing risks
	to more than two causes (formerly, cause of interest
	vs. all others) via Multinomial BART (mbart)
 
	* adding surv.gbmm to extend the BART mixed model to survival
	(results questionable: since removed from NAMESPACE in v3.4)

Changes and New Features in 3.1 (2019-12-04):
	* addressing new behavior of class function

Changes and New Features in 3.0 (2019-10-17):
	* first version released at bnptools on github 
	https://github.com/rsparapa/bnptools

	* now a C++ header-only class library that can be linked with other
	R packages via Imports/LinkingTo in the DESCRIPTION file
	For an example of how this can be done, see btBART also in bnptools
	But, the API might change, i.e., we are considering the namespace
	BART3

Changes and New Features in 2.6 (2019-07-24):
	* updated vignette with typo corrections and additional info

	* last version on CRAN: frozen to be in synch with JSS article
	
Changes and New Features in 2.5 (2019-06-10):
	* new feature: stratrs function now handles
	continuous data as well categorical

	* bug fix: bartModelMatrix now correctly handles
	all-missing columns with numcut>0 and rm.const=T

	* bug fix: fix gbart syntax error in LPML feature
	
	* bug fix: fix a mc.pbart error which failed
	to recalculate prob.train.mean and prob.test.mean
	based on all chains

Changes and New Features in 2.4 (2019-04-10):
	* change:  per CRAN policy, dynamic libraries are no 
	longer "stripped" on Linux

Changes and New Features in 2.3 (2019-03-27):
	* new feature: adding arguments to surv.pre.bart, surv.bart
	and mc.surv.bart to fine-tune grid of time points and 
	automate creation of time dependent covariates.  These are
	convenience features to make multi-state models easier to
	handle; see new demo leuk

	* change: arguments to rtnorm and rtgamma more user friendly

	* new feature: re-organized vignettes into a single vignette

	* new feature: gbart now calculates log pseudo-marginal
	likelihood (LPML) for computing pseudo-Bayes factors

	* new feature: new Generalized BART Mixed Models, see the
	function gbmm

Changes and New Features in 2.2 (2019-01-22):

	* bug fix: fix typo in size of theta grid for sparse prior

	* new feature: Multinomial BART, mbart2, (suitable for
	cases with more categories) based on the original mbart
	implementation but inspired by the logit transformation;
	nevertheless, both logit and probit are available and, 
	of course, probit is much faster

Changes and New Features in 2.1 (2018-11-28):

	* to meet current CRAN guidelines, replaced CXX1X and CXX1XSTD 
	configure/autoconf macros with CXX11 and CXX11STD respectively

Changes and New Features in 2.0 (2018-11-12):

	* new feature: Multinomial BART, mbart, (suitable for cases
	with relatively fewer categories) replaced with a new
	conditional probability implementation which allows the user
	to choose probit or logit BART; of course, probit BART is 
	much faster

	* new feature: if lambda is specified as 0, then sigma is
	considered to be fixed and known at the value sigest 
        and, therefore, not sampled

	* bug fix: fixed single column x.test bug

Changes and New Features in 1.9 (2018-08-17):

	* bug fix: off by one error fixed in robust Gamma 
	generator for sparse Dirichlet prior

        * new feature: abart/mc.abart computes a variant
	of the Accelerated Failue Time model based on BART

	* new feature: for x.train/x.test with missing data elements, 
	gbart will singly impute them with hot decking.  
	Since mc.gbart runs multiple gbart threads in parallel, 
	mc.gbart performs multiple imputation with hot decking, 
	i.e., a separate imputation for each thread.

Changes and New Features in 1.8 (2018-06-30):

	* bug fix: fix typo in the recur.pwbart() which
	prevented predict() from working when OpenMP
	was not available

Changes and New Features in 1.7 (2018-06-08):

	* enhancement: generalized, or generic, BART: gbart/mc.gbart
	unites continuous and binary BART in one function call
	re-based time-to-event BARTs on gbart as well

	* enhancement: binaryOffset=NULL specifies 
	binaryOffset=qXXXX(mean(y.train)) for pbart/mc.pbart,
	lbart/mc.lbart, mbart/mc.mbart; offset=NULL does the
	same for gbart/mc.gbart, surv.bart/mc.surv.bart, 
	recur.bart/mc.recur.bart, crisk.bart/mc.crisk.bart
	and crisk2.bart/mc.crisk2.bart (note: competing 
	cause 2 is handled analogously for offset2=NULL)

	* enhancement: multinomial BART rebased on probit BART for 
	computational efficiency

	* bug fix: several corrections in probit and logit BART.
	Note that this may change your results for binary and
	time-to-event outcomes.  For probit BART, the correction
	generally leads to a small change in the results.  However,
	the logit BART correction may lead to more substantial
	changes.

	* doc fix: correct docs for the binary case in pbart/mc.pbart, 
	lbart and mbart; and correct docs for the numeric case in
	wbart/mc.wbart

	* enhancement: robust Gamma generation for small scale parameter

	* enhancement: more robust sparse Dirichlet prior implementation

Changes and New Features in 1.6 (2018-03-19):

	* for binary outcomes, new default for ntree=50
	  (change inadvertently omitted from v1.4 below)

        * enhancement: recur.pre.bart, recur.bart and mc.recur.bart
	  can now handle NA entries in the times and delta matrices

	* enhancement: for time-to-event outcomes, new optional 
	  K parameter which coarsens time per the quantiles
          1/K, 2/K, ..., K/K.

	* bug fix: x.test/x.test2 now properly transposed if needed
	  for post-processing

	* bug fix: sparse Dirichlet prior now corrected for 
	  random theta update.  Thanks to Antonio Linero for
	  the detailed bug report.

Changes and New Features in 1.5 (2018-02-08):

        * bug fix: ambiguous call of floor surrounding integer division

	* bug fix: x.test is not an argument of recur.pre.bart

Changes and New Features in 1.4 (2018-02-02):

	* for binary outcomes, new default for ntree=50

        * fixed library bloat on Linux with strip

	* x.train and x.test can be supplied as data.frames
	  which contain factors as stated in the documentation

	* cutpoints now based on data itself, i.e., binary or
	  ordinal covariates.  Similarly, you can request 
	  quantiles via the usequants setting. 

	* sparse variable selection now available with the
	  sparse=TRUE argument; see the documentation

	* new vignettes

	* new function, mc.lbart, for logit BART in parallel

	* mbart updated to equivalent functionality as other functions

	* new function, mc.mbart, for Multinomial BART in parallel

Changes and New Features in 1.3 (2017-09-18):

        * new examples in demo directory

	* return ndpost values rather ndpost/keepevery

	* for calling BART directly from C++, you can
	  now use the RNG provided by Rmath or the STL random class
	  see the improved example in cxx-ex

	* new predict S3 methods, see predict.wbart and other
	  predict variants

	* Added Geweke diagnostics for pbart, surv.bart, etc.
	  See gewekediag which is adapted from the coda package

	* logit BART added for binary outcomes; see lbart

	* Multinomial BART added for categorical outcomes; see mbart

Changes and New Features in 1.2 (2017-04-30):

	* you can now call BART directly from C++ with the Rmath library 
	  see new header rn.h and the example in cxx-ex

Changes and New Features in 1.1 (2017-04-13):

	* No user visible changes: bug-fix release

Changes and New Features in 1.0 (2017-04-07):

	* First release on CRAN
